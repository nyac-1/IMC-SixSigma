Sandbox logs:
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 0
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 100
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 200
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 300
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 400
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 500
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 600
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 700
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 800
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 900
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 1000
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 1100
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 1200
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 1300
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 1400
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 1500
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 1600
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 1700
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 1800
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 1900
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 2000
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 2100
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 2200
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 2300
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 2400
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 2500
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 2600
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 2700
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 2800
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 2900
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 3000
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 3100
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 3200
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 3300
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 3400
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 3500
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 3600
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 3700
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 3800
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 3900
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 4000
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 4100
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 4200
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 4300
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 4400
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 4500
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 4600
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 4700
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 4800
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 4900
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 5000
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 5100
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 5200
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 5300
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 5400
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 5500
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 5600
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 5700
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 5800
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 5900
}
{
  "sandboxLog": "",
  "lambdaLog": "",
  "timestamp": 6000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f42ba7fc-286c-4f6b-a512-2a06cc477226\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f42ba7fc-286c-4f6b-a512-2a06cc477226\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 6100
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b9b94fd9-a0c3-4329-995f-41cbd963e415\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b9b94fd9-a0c3-4329-995f-41cbd963e415\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 6200
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"96db53af-daec-43ac-899a-efb0c47c3672\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"96db53af-daec-43ac-899a-efb0c47c3672\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 6300
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"1a7bdf94-2c59-4a2a-9eb9-923258b2d5f8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"1a7bdf94-2c59-4a2a-9eb9-923258b2d5f8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 6400
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"3e5af501-e496-4db7-ad88-e06dae968044\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"3e5af501-e496-4db7-ad88-e06dae968044\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 6500
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"4b62c7bf-dc07-4fad-b28f-4871b5a576dd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"4b62c7bf-dc07-4fad-b28f-4871b5a576dd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 6600
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"47fbbe30-7f13-4671-b857-267e89a28fcd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"47fbbe30-7f13-4671-b857-267e89a28fcd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 6700
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"70344075-94e7-48d4-9082-e3f6ec7cc118\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"70344075-94e7-48d4-9082-e3f6ec7cc118\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 6800
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"488c14a3-32af-461d-9c8a-f676beaec00d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"488c14a3-32af-461d-9c8a-f676beaec00d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 6900
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"67801777-f240-40e1-9d0c-f27630c38461\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"67801777-f240-40e1-9d0c-f27630c38461\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 7000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"0b8921d6-c907-43be-8f84-a102dc91cdbc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"0b8921d6-c907-43be-8f84-a102dc91cdbc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 7100
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"117d53a4-edd4-459e-a0d6-dce310b29d00\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"117d53a4-edd4-459e-a0d6-dce310b29d00\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 7200
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"0afd747c-f56e-4354-86c3-86aaf4a53687\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"0afd747c-f56e-4354-86c3-86aaf4a53687\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 7300
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"a2a1072f-7c21-433e-94ca-f2da1915a59f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"a2a1072f-7c21-433e-94ca-f2da1915a59f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 7400
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b9cb1184-8445-4aa5-90ce-783060afd61e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b9cb1184-8445-4aa5-90ce-783060afd61e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 7500
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"9d191712-8bb0-4690-b081-587f4c29b76e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"9d191712-8bb0-4690-b081-587f4c29b76e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 7600
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f1af16e0-2189-4c2b-8f7f-78a1ecfe5a44\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f1af16e0-2189-4c2b-8f7f-78a1ecfe5a44\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 7700
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"dca91869-20b3-4099-9a66-cca9f1828fea\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"dca91869-20b3-4099-9a66-cca9f1828fea\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 7800
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"bf511792-fea6-4801-a64b-0ab59302b11e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"bf511792-fea6-4801-a64b-0ab59302b11e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 7900
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"ba814bfc-2455-4217-8108-f733f39f413b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"ba814bfc-2455-4217-8108-f733f39f413b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 8000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"d5bc17c2-caae-4bd5-9efe-6a21b7f0003a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"d5bc17c2-caae-4bd5-9efe-6a21b7f0003a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 8100
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"c46d7994-a863-4344-a1a6-033351956077\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"c46d7994-a863-4344-a1a6-033351956077\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 8200
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"06402205-21bc-403b-93e6-2367b20f92ba\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"06402205-21bc-403b-93e6-2367b20f92ba\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 8300
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"c9010332-9e90-48d1-ba29-69609b35db75\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"c9010332-9e90-48d1-ba29-69609b35db75\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 8400
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"01320246-ada4-490a-b97d-6a3d45c68e1d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"01320246-ada4-490a-b97d-6a3d45c68e1d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 8500
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"9bef27ed-8b5b-4084-93da-cd7b0bb1e879\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"9bef27ed-8b5b-4084-93da-cd7b0bb1e879\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 8600
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"77a2e1ef-4375-4908-a01c-97e9941c4d20\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"77a2e1ef-4375-4908-a01c-97e9941c4d20\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 8700
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"7f127858-ee54-4421-9176-4783b2cdcdb9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"7f127858-ee54-4421-9176-4783b2cdcdb9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 8800
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"61482e3e-4bb7-466c-ae2e-3f8a3cc0fda0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"61482e3e-4bb7-466c-ae2e-3f8a3cc0fda0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 8900
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"2e7fc722-b3a4-4490-a3d9-0ee120cfd902\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"2e7fc722-b3a4-4490-a3d9-0ee120cfd902\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 9000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"ead2bd83-4827-4c6a-91ec-835458cc7ec5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"ead2bd83-4827-4c6a-91ec-835458cc7ec5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 9100
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"9fc1aaf7-a531-41e5-9c68-ee6512423f63\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"9fc1aaf7-a531-41e5-9c68-ee6512423f63\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 9200
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"62d4f09e-2fc3-4489-87c5-51c42f0280dc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"62d4f09e-2fc3-4489-87c5-51c42f0280dc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 9300
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"3d89d3a2-aeca-4e29-bb25-4c2bb72b4c93\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"3d89d3a2-aeca-4e29-bb25-4c2bb72b4c93\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 9400
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"abd6fc27-ab81-410e-8ecc-556e5ef1b973\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"abd6fc27-ab81-410e-8ecc-556e5ef1b973\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 9500
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"fbfebe37-0bb2-4bf0-9872-5c18d25a1d70\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"fbfebe37-0bb2-4bf0-9872-5c18d25a1d70\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 9600
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"61cf2509-d1ad-467f-a44e-76f34d3698b1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"61cf2509-d1ad-467f-a44e-76f34d3698b1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 9700
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b668e5a3-e6bf-4c21-bcf9-3a4ac23906bb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b668e5a3-e6bf-4c21-bcf9-3a4ac23906bb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 9800
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"06baa3bb-233d-49b9-9819-0c3f79517096\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"06baa3bb-233d-49b9-9819-0c3f79517096\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 9900
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"bd098420-8d3e-4bd9-9cf2-95149ace9ad9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"bd098420-8d3e-4bd9-9cf2-95149ace9ad9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 10000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"806d9288-4564-47ca-95f6-d88abda8795d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"806d9288-4564-47ca-95f6-d88abda8795d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 10100
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"8ad806e9-6758-4e0f-af65-f3d2986977e2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"8ad806e9-6758-4e0f-af65-f3d2986977e2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 10200
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f423bfc3-91a8-4f23-85c8-d7530626e989\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f423bfc3-91a8-4f23-85c8-d7530626e989\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 10300
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"5530394b-7788-4182-a3a3-0bb93e158aab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"5530394b-7788-4182-a3a3-0bb93e158aab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 10400
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"06e87a56-9d67-445b-a8d7-51e6162a4f10\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"06e87a56-9d67-445b-a8d7-51e6162a4f10\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 10500
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"48dee608-1ca4-4871-81bc-8169c4ef6030\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"48dee608-1ca4-4871-81bc-8169c4ef6030\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 10600
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"abbe49bd-1e36-47b9-8c3e-5076ce49cc0a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"abbe49bd-1e36-47b9-8c3e-5076ce49cc0a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 10700
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"62d4c3f9-be05-4ec2-8cee-16532e2c3c55\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"62d4c3f9-be05-4ec2-8cee-16532e2c3c55\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 10800
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"5cacab89-f7c5-4add-91dd-2e36b7661262\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"5cacab89-f7c5-4add-91dd-2e36b7661262\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 10900
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"27c2a520-fbe5-4bdc-b4c8-e82fa1c72b85\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"27c2a520-fbe5-4bdc-b4c8-e82fa1c72b85\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 11000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"238777e5-d514-451d-b473-0371c2c891c1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"238777e5-d514-451d-b473-0371c2c891c1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 11100
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"5e2e0f7d-94d7-4a65-866e-f1162c5e6fc1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"5e2e0f7d-94d7-4a65-866e-f1162c5e6fc1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 11200
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"8d2c3bea-dda9-4061-b4f7-2ee6ab6b6bc1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"8d2c3bea-dda9-4061-b4f7-2ee6ab6b6bc1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 11300
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"276df1c2-4cc6-4b49-83a5-165b2e780952\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"276df1c2-4cc6-4b49-83a5-165b2e780952\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 11400
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"a2df21e6-1235-4b35-8bea-102c4a34ed04\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"a2df21e6-1235-4b35-8bea-102c4a34ed04\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 11500
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"2c97761a-e3ac-4a09-8f92-e5ef3f1ac1d1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"2c97761a-e3ac-4a09-8f92-e5ef3f1ac1d1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 11600
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"99a09829-7d6f-4bba-9b73-5fa95ab847fd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"99a09829-7d6f-4bba-9b73-5fa95ab847fd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 11700
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b36ac704-0923-47e8-b988-d694f592171b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b36ac704-0923-47e8-b988-d694f592171b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 11800
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"8a50f304-114c-42cb-a873-47d3cda9f413\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"8a50f304-114c-42cb-a873-47d3cda9f413\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 11900
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"6813f222-ca23-4a49-a4e0-d727c177e1c6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"6813f222-ca23-4a49-a4e0-d727c177e1c6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 12000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"3d20e7f1-c77d-455c-aae1-24a7083c59a3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"3d20e7f1-c77d-455c-aae1-24a7083c59a3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 12100
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"85a68635-ece2-4dcc-9bed-7c0a0fe34085\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"85a68635-ece2-4dcc-9bed-7c0a0fe34085\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 12200
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"d42b08a0-798c-4ce6-8e33-fe89cf60f9ac\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"d42b08a0-798c-4ce6-8e33-fe89cf60f9ac\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 12300
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"fc076008-e4f9-4d80-af3b-4d6e9db166e7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"fc076008-e4f9-4d80-af3b-4d6e9db166e7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 12400
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"ba4065db-8395-4a89-9049-4fd08f83ab07\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"ba4065db-8395-4a89-9049-4fd08f83ab07\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 12500
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"493eebcb-b822-4787-9c12-3a3fea48d766\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"493eebcb-b822-4787-9c12-3a3fea48d766\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 12600
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"9cc93115-87db-4732-8aa0-748fa7e06037\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"9cc93115-87db-4732-8aa0-748fa7e06037\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 12700
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"a3451cff-027a-4111-8e4d-46d43887e79d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"a3451cff-027a-4111-8e4d-46d43887e79d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 12800
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"625f6f8d-4e2f-41fe-b2b1-4007f9971abb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"625f6f8d-4e2f-41fe-b2b1-4007f9971abb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 12900
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"6893514c-3431-43ab-a71f-3acbe1c97c83\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"6893514c-3431-43ab-a71f-3acbe1c97c83\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 13000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f6e9d138-4492-4124-a8d7-f5ff58dfe2f0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f6e9d138-4492-4124-a8d7-f5ff58dfe2f0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 13100
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"ec8e2615-09da-45fe-885d-73ae6d365008\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"ec8e2615-09da-45fe-885d-73ae6d365008\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 13200
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"d028a054-5c83-4b60-938e-71b1a7ea3022\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"d028a054-5c83-4b60-938e-71b1a7ea3022\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 13300
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"2f1daa99-1d16-4e64-8ded-7248ef683d2b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"2f1daa99-1d16-4e64-8ded-7248ef683d2b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 13400
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"3db4631b-e6ad-45c8-9631-97fab8b02c79\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"3db4631b-e6ad-45c8-9631-97fab8b02c79\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 13500
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"807b8b40-6706-4f97-9f32-fb215d45f757\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"807b8b40-6706-4f97-9f32-fb215d45f757\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 13600
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"e02ee1bb-4528-4e25-bebb-8db4530d0229\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"e02ee1bb-4528-4e25-bebb-8db4530d0229\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 13700
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"4e387de9-43c3-4b0e-ac57-65b2cee63def\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"4e387de9-43c3-4b0e-ac57-65b2cee63def\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 13800
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"2c171c20-cfe8-4826-99ab-73fe7482c505\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"2c171c20-cfe8-4826-99ab-73fe7482c505\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 13900
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"8843aedb-8c61-4ef2-94e7-1ccbee4f6454\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"8843aedb-8c61-4ef2-94e7-1ccbee4f6454\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 14000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"41e9501b-7efd-4a83-a5fb-655a6eb8d0f9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"41e9501b-7efd-4a83-a5fb-655a6eb8d0f9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 14100
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b2ebc555-a122-48a7-be65-92e576193560\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b2ebc555-a122-48a7-be65-92e576193560\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 14200
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"cdce108a-8349-418f-92de-8709541cc76c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"cdce108a-8349-418f-92de-8709541cc76c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 14300
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"4bf8bad3-713a-46f6-8444-5b3184950835\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"4bf8bad3-713a-46f6-8444-5b3184950835\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 14400
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f5402607-85e9-4ecf-b7c5-381b0af676fa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f5402607-85e9-4ecf-b7c5-381b0af676fa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 14500
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"6f77e4cd-bdfd-467a-bfd7-c5df2d48580e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"6f77e4cd-bdfd-467a-bfd7-c5df2d48580e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 14600
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"df1b0aaf-01d9-4c4f-8585-bf24249227b9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"df1b0aaf-01d9-4c4f-8585-bf24249227b9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 14700
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"fedfc453-9958-4ec5-b4ad-f87163412811\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"fedfc453-9958-4ec5-b4ad-f87163412811\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 14800
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"d821f3a3-355d-439b-8ba4-517d3f63b096\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"d821f3a3-355d-439b-8ba4-517d3f63b096\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 14900
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"1af7d986-ed0d-4fdc-b454-d849593e3730\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"1af7d986-ed0d-4fdc-b454-d849593e3730\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 15000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"ef1d5ef4-78f9-461b-a669-7905b348837e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"ef1d5ef4-78f9-461b-a669-7905b348837e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 15100
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"872d0e4f-f9e2-4210-bd5f-e5fa82460ac4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"872d0e4f-f9e2-4210-bd5f-e5fa82460ac4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 15200
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"47e46826-2a13-46b6-b965-f692506e1447\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"47e46826-2a13-46b6-b965-f692506e1447\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 15300
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"a1fb765c-357f-45ed-8dca-46333eeeb88d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"a1fb765c-357f-45ed-8dca-46333eeeb88d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 15400
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"8bb40866-4b9a-476c-92d8-80489c7e7371\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"8bb40866-4b9a-476c-92d8-80489c7e7371\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 15500
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b894c5a8-0369-43b6-bdea-6e8920b10b42\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"b894c5a8-0369-43b6-bdea-6e8920b10b42\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 15600
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"82f8a444-a2b3-41aa-b639-27e0353b85ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"82f8a444-a2b3-41aa-b639-27e0353b85ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 15700
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"a7a85dd0-74b7-407e-a17e-8c56def41a94\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"a7a85dd0-74b7-407e-a17e-8c56def41a94\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 15800
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"2f0d6150-e608-4b16-a23a-c15eb08dd351\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"2f0d6150-e608-4b16-a23a-c15eb08dd351\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 15900
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f7a58811-dd02-4027-aa38-764e4ac642ab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f7a58811-dd02-4027-aa38-764e4ac642ab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 16000
}
{
  "sandboxLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f24a6973-855e-4a6a-b045-fa0b6d6f1d09\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'sd_30'\", \"errorType\": \"KeyError\", \"requestId\": \"f24a6973-855e-4a6a-b045-fa0b6d6f1d09\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 31, in run\\n    orders = self.trade_amethysts(product, max_quantities, trader_data)\\n\", \"  File \\\"/var/task/trader.py\\\", line 96, in trade_amethysts\\n    orders += self.limit_order(product, int(trader_data[product][\\\"mean_60\\\"] - 1 * trader_data[product][\\\"sd_30\\\"]), quantity_buy, \\\"buy\\\")\\n\"]}",
  "timestamp": 16100
}
{
  "sandboxLog": "Lambda errors have reached maximum value for submission 7dbd5bce-62ca-421c-9eb6-697ba558d853",
  "lambdaLog": null,
  "timestamp": 123063
}



Activities log:
day;timestamp;product;bid_price_1;bid_volume_1;bid_price_2;bid_volume_2;bid_price_3;bid_volume_3;ask_price_1;ask_volume_1;ask_price_2;ask_volume_2;ask_price_3;ask_volume_3;mid_price;profit_and_loss
0;0;AMETHYSTS;9998;9;9995;23;;;10005;23;;;;;10001.5;0.0
0;0;STARFRUIT;5036;23;;;;;5043;23;;;;;5039.5;0.0
0;100;AMETHYSTS;10002;1;10000;2;9998;4;10004;1;10005;21;;;10003.0;0.0
0;100;STARFRUIT;5042;1;5039;2;5037;1;5043;22;;;;;5042.5;0.0
0;200;AMETHYSTS;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
0;200;STARFRUIT;5037;1;5036;21;;;5043;1;5044;21;;;5040.0;0.0
0;300;STARFRUIT;5042;1;5037;26;;;5044;26;;;;;5043.0;0.0
0;300;AMETHYSTS;9995;26;;;;;10005;26;;;;;10000.0;0.0
0;400;AMETHYSTS;9998;8;9996;2;9995;26;10004;2;10005;26;;;10001.0;0.0
0;400;STARFRUIT;5037;28;;;;;5044;28;;;;;5040.5;0.0
0;500;AMETHYSTS;9998;8;9996;1;9995;23;10004;1;10005;23;;;10001.0;0.0
0;500;STARFRUIT;5037;24;;;;;5042;3;5044;24;;;5039.5;0.0
0;600;AMETHYSTS;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
0;600;STARFRUIT;5041;5;5037;30;;;5044;30;;;;;5042.5;0.0
0;700;STARFRUIT;5036;22;;;;;5043;23;;;;;5039.5;0.0
0;700;AMETHYSTS;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
0;800;AMETHYSTS;9996;1;9995;24;;;10000;3;10004;1;10005;24;9998.0;0.0
0;800;STARFRUIT;5036;25;;;;;5039;3;5043;25;;;5037.5;0.0
0;900;AMETHYSTS;9996;1;9995;20;;;9998;11;10004;1;10005;20;9997.0;1.0
0;900;STARFRUIT;5036;21;;;;;5043;21;;;;;5039.5;0.0
0;1000;AMETHYSTS;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;23.0
0;1000;STARFRUIT;5037;1;5036;30;;;5043;31;;;;;5040.0;0.0
0;1100;STARFRUIT;5037;22;;;;;5043;1;5044;21;;;5040.0;0.0
0;1100;AMETHYSTS;9996;1;9995;21;;;10002;6;10004;1;10005;21;9999.0;23.0
0;1200;AMETHYSTS;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;23.0
0;1200;STARFRUIT;5036;23;;;;;5037;1;5043;23;;;5036.5;0.0
0;1300;AMETHYSTS;10002;1;9995;25;;;10005;25;;;;;10003.5;23.0
0;1300;STARFRUIT;5036;25;;;;;5043;25;;;;;5039.5;0.0
0;1400;AMETHYSTS;9995;23;;;;;10000;6;10005;23;;;9997.5;23.0
0;1400;STARFRUIT;5036;23;;;;;5039;6;5043;23;;;5037.5;0.0
0;1500;STARFRUIT;5041;1;5036;21;;;5043;21;;;;;5042.0;0.0
0;1500;AMETHYSTS;9996;1;9995;20;;;9998;4;10004;1;10005;20;9997.0;23.0
0;1600;AMETHYSTS;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;31.0
0;1600;STARFRUIT;5037;30;;;;;5043;2;5044;28;;;5040.0;0.0
0;1700;AMETHYSTS;9995;28;;;;;10005;28;;;;;10000.0;31.0
0;1700;STARFRUIT;5036;28;;;;;5041;8;5043;28;;;5038.5;0.0
0;1800;AMETHYSTS;10000;4;9995;23;;;10002;10;10005;23;;;10001.0;31.0
0;1800;STARFRUIT;5040;4;5036;23;;;5044;23;;;;;5042.0;0.0
0;1900;STARFRUIT;5036;31;;;;;5043;32;;;;;5039.5;0.0
0;1900;AMETHYSTS;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;31.0
0;2000;AMETHYSTS;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;31.0
0;2000;STARFRUIT;5036;23;;;;;5043;23;;;;;5039.5;0.0
0;2100;AMETHYSTS;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;31.0
0;2100;STARFRUIT;5036;28;;;;;5041;5;5043;28;;;5038.5;0.0
0;2200;AMETHYSTS;9996;1;9995;20;;;9998;4;10004;1;10005;20;9997.0;31.0
0;2200;STARFRUIT;5037;4;5036;21;;;5043;21;;;;;5040.0;0.0
0;2300;STARFRUIT;5038;5;5037;24;;;5043;2;5044;22;;;5040.5;0.0
0;2300;AMETHYSTS;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;39.0
0;2400;AMETHYSTS;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;39.0
0;2400;STARFRUIT;5037;22;;;;;5043;2;5044;20;;;5040.0;0.0
0;2500;AMETHYSTS;9998;3;9996;2;9995;21;10004;2;10005;21;;;10001.0;39.0
0;2500;STARFRUIT;5036;23;;;;;5043;23;;;;;5039.5;0.0
0;2600;AMETHYSTS;10002;1;9996;1;9995;29;10004;1;10005;29;;;10003.0;39.0
0;2600;STARFRUIT;5035;30;;;;;5042;30;;;;;5038.5;0.0
0;2700;STARFRUIT;5036;7;5035;23;;;5041;2;5042;21;;;5038.5;0.0
0;2700;AMETHYSTS;9998;7;9996;2;9995;21;10004;2;10005;21;;;10001.0;41.0
0;2800;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;41.0
0;2800;STARFRUIT;5035;27;;;;;5042;27;;;;;5038.5;0.0
0;2900;AMETHYSTS;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;41.0
0;2900;STARFRUIT;5035;22;;;;;5042;22;;;;;5038.5;0.0
0;3000;AMETHYSTS;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;41.0
0;3000;STARFRUIT;5040;1;5035;6;5034;29;5041;30;;;;;5040.5;0.0
0;3100;STARFRUIT;5035;1;5034;27;;;5041;28;;;;;5038.0;0.0
0;3100;AMETHYSTS;9998;5;9996;1;9995;27;10004;1;10005;27;;;10001.0;41.0
0;3200;STARFRUIT;5035;24;;;;;5038;5;5042;24;;;5036.5;0.0
0;3200;AMETHYSTS;10002;2;9995;24;;;10005;24;;;;;10003.5;41.0
0;3300;AMETHYSTS;10002;1;9996;1;9995;24;10004;1;10005;24;;;10003.0;41.0
0;3300;STARFRUIT;5034;25;;;;;5041;25;;;;;5037.5;0.0
0;3400;STARFRUIT;5034;29;;;;;5041;29;;;;;5037.5;0.0
0;3400;AMETHYSTS;9998;10;9996;2;9995;27;10004;2;10005;27;;;10001.0;41.0
0;3500;STARFRUIT;5034;26;;;;;5041;26;;;;;5037.5;0.0
0;3500;AMETHYSTS;9995;26;;;;;10002;10;10005;26;;;9998.5;41.0
0;3600;STARFRUIT;5034;27;;;;;5041;27;;;;;5037.5;0.0
0;3600;AMETHYSTS;9995;27;;;;;10002;8;10005;27;;;9998.5;41.0
0;3700;AMETHYSTS;9998;3;9995;25;;;10005;25;;;;;10001.5;41.0
0;3700;STARFRUIT;5034;25;;;;;5041;25;;;;;5037.5;0.0
0;3800;STARFRUIT;5034;24;;;;;5039;7;5041;24;;;5036.5;0.0
0;3800;AMETHYSTS;9995;24;;;;;10005;24;;;;;10000.0;41.0
0;3900;STARFRUIT;5035;1;5034;26;;;5040;2;5041;24;;;5037.5;0.0
0;3900;AMETHYSTS;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;41.0
0;4000;STARFRUIT;5034;30;;;;;5041;31;;;;;5037.5;0.0
0;4000;AMETHYSTS;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;41.0
0;4100;AMETHYSTS;10000;5;9996;2;9995;22;10002;4;10004;2;10005;22;10001.0;41.0
0;4100;STARFRUIT;5037;5;5035;2;5034;22;5041;24;;;;;5039.0;0.0
0;4200;STARFRUIT;5034;29;;;;;5039;7;5041;29;;;5036.5;0.0
0;4200;AMETHYSTS;10002;5;9996;1;9995;28;10004;1;10005;28;;;10003.0;41.0
0;4300;STARFRUIT;5034;26;;;;;5036;2;5041;26;;;5035.0;0.0
0;4300;AMETHYSTS;9995;26;;;;;10002;8;10005;26;;;9998.5;41.0
0;4400;STARFRUIT;5035;28;;;;;5042;28;;;;;5038.5;0.0
0;4400;AMETHYSTS;9995;28;;;;;10005;28;;;;;10000.0;41.0
0;4500;AMETHYSTS;9995;26;;;;;10005;26;;;;;10000.0;41.0
0;4500;STARFRUIT;5035;26;;;;;5040;8;5042;26;;;5037.5;0.0
0;4600;STARFRUIT;5035;21;;;;;5040;3;5042;21;;;5037.5;0.0
0;4600;AMETHYSTS;9995;21;;;;;10005;21;;;;;10000.0;41.0
0;4700;STARFRUIT;5034;26;;;;;5041;26;;;;;5037.5;0.0
0;4700;AMETHYSTS;9998;5;9995;26;;;10005;26;;;;;10001.5;41.0
0;4800;STARFRUIT;5039;1;5035;7;5034;23;5041;23;;;;;5040.0;0.0
0;4800;AMETHYSTS;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;41.0
0;4900;AMETHYSTS;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;41.0
0;4900;STARFRUIT;5033;24;;;;;5038;6;5040;24;;;5035.5;0.0
0;5000;STARFRUIT;5033;6;5032;30;;;5039;31;;;;;5036.0;0.0
0;5000;AMETHYSTS;9998;9;9996;1;9995;30;10004;1;10005;30;;;10001.0;41.0
0;5100;STARFRUIT;5032;26;;;;;5039;26;;;;;5035.5;0.0
0;5100;AMETHYSTS;9995;26;;;;;10005;26;;;;;10000.0;41.0
0;5200;STARFRUIT;5035;5;5033;8;5032;23;5039;25;;;;;5037.0;0.0
0;5200;AMETHYSTS;10000;5;9998;7;9996;2;10004;2;10005;23;;;10002.0;41.0
0;5300;AMETHYSTS;9995;22;;;;;9998;12;10005;22;;;9996.5;41.0
0;5300;STARFRUIT;5032;22;;;;;5039;22;;;;;5035.5;0.0
0;5400;STARFRUIT;5032;30;;;;;5039;30;;;;;5035.5;0.0
0;5400;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;43.0
0;5500;AMETHYSTS;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;44.0
0;5500;STARFRUIT;5032;29;;;;;5033;8;5039;29;;;5032.5;0.0
0;5600;AMETHYSTS;9998;2;9996;2;9995;23;10004;2;10005;23;;;10001.0;44.0
0;5600;STARFRUIT;5032;25;;;;;5038;2;5039;23;;;5035.0;0.0
0;5700;AMETHYSTS;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;44.0
0;5700;STARFRUIT;5032;3;5031;31;;;5038;31;;;;;5035.0;0.0
0;5800;STARFRUIT;5031;30;;;;;5038;30;;;;;5034.5;0.0
0;5800;AMETHYSTS;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;44.0
0;5900;AMETHYSTS;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;44.0
0;5900;STARFRUIT;5031;23;;;;;5038;23;;;;;5034.5;0.0
0;6000;AMETHYSTS;9995;30;;;;;10002;10;10005;30;;;9998.5;44.0
0;6000;STARFRUIT;5031;30;;;;;5038;30;;;;;5034.5;0.0




Trade History:
null